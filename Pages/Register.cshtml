@page
@model RazorPages.Pages.RegisterModel

<!DOCTYPE html>
<html lang="lt">
<head>
    <meta charset="utf-8" />
    <title>Registracija</title>
</head>

<body>
    <div class="register-container">
        <button class="go-back-button" onclick="window.history.back()">←</button>

        <h1>Registracija</h1>

        @if (Model?.Input == null)
        {
            <p>Error: Model or Input is null!</p>
        }

        @if (!ModelState.IsValid)
        {
            <div class="error-message">
                <ul>
                    @foreach (var error in ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <li>@error.ErrorMessage</li>
                    }
                </ul>
            </div>
        }

        <form method="post" onsubmit="return validateForm();">
            <div class="form-row">
                <div class="form-column">
                    <label for="vardas">Vardas:</label>
                    <input type="text" id="vardas" name="vardas" required />

                    <label for="slapyvardis">Slapyvardis:</label>
                    <input type="text" id="slapyvardis" name="slapyvardis" required />

                    <label for="slaptazodis">Slaptažodis:</label>
                    <input type="password" id="slaptazodis" name="slaptazodis" required />

                    <label for="mokymo_istaigos_pavadinimas">Mokymo Įstaigos Pavadinimas:</label>
                    <input type="text" id="mokymo_istaigos_pavadinimas" name="mokymo_istaigos_pavadinimas" required />

                    <label for="gimimo_data">Gimimo Data:</label>
                    <input type="date" id="gimimo_data" name="gimimo_data" required />
                </div>
                <div class="form-column">
                    <label for="pavarde">Pavarde:</label>
                    <input type="text" id="pavarde" name="pavarde" required />

                    <label for="elektroninis_pastas">Elektroninis Paštas:</label>
                    <input type="email" id="elektroninis_pastas" name="elektroninis_pastas" required />

                    <label for="miestas">Miestas:</label>
                    <input type="text" id="miestas" name="miestas" required />

                    <label for="adresas">Adresas:</label>
                    <input type="text" id="adresas" name="adresas" required />

                    <label for="profilio_tipas">Profilio Tipas:</label>
                    <select id="profilio_tipas" name="profilio_tipas" required>
                        <option value="Mokinys">Mokinys</option>
                        <option value="Mokytojas">Mokytojas</option>
                        <option value="Administratorius">Administratorius</option>
                    </select>
                </div>
            </div>
            <button type="submit">Registruotis</button>

            <input type="hidden" id="TwoFACode" name="TwoFACode" value="" />
            <input type="hidden" id="RegistrationAttemptId" name="RegistrationAttemptId" value="@Model.RegistrationAttemptId" />
            <input type="hidden" id="SessionAttemptId" name="SessionAttemptId" value="@Model.SessionAttemptId" />
        </form>

        @if (TempData["TwoFACodeSent"] != null && (bool)TempData["TwoFACodeSent"])
        {
            <div class="overlay" id="2faOverlay" style="display: flex;">
                <div class="register-popup">
                    <h2>2FA Patvirtinimas</h2>
                    <label class="register-lbl" for="2faCode">Įveskite el. pašte gautą 2FA kodą:</label>
                    <input class="register-input" type="text" id="2faCodeInput" name="TwoFACode" required />
                    <br />
                    <button type="button" onclick="submit2fa()">Patvirtinti</button>
                </div>
            </div>
        }
    </div>
</body>

<script>
    function validateForm() {
        const birthDateInput = document.querySelector("input[name='gimimo_data']");
        const birthDate = new Date(birthDateInput.value);
        const today = new Date();
            
        if (birthDate > today) {
            alert("Gimimo data negali būti ateityje!");
            return false;
        }
        return true;
    }

    function submit2fa() {
        const twoFACode = document.getElementById("2faCodeInput").value.trim();

        if (twoFACode) {
            const registrationAttemptId = document.getElementById("RegistrationAttemptId").value;
            const sessionAttemptId = document.getElementById("SessionAttemptId").value;

            fetch("/Register?handler=Verify2FACode", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "RequestVerificationToken": document.querySelector('[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({ TwoFACode: twoFACode, 
                                        RegistrationAttemptId: registrationAttemptId,
                                        SessionAttemptId: sessionAttemptId })
            }).then(response => response.json()).then(result => {
            if (result.success) {
                window.location.href = "/Profile";
            } else {
                alert(result.message || "Patvirtinimas nepavyko, bandykite dar kartą!");
            }
        })
        .catch(error => {
            alert("Patvirtinimas nepavyko, bandykite dar kartą!");
        });
    } else {
        alert("Prašome įvesti 2FA kodą.");
    }
}
</script>

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f4f7fc;
        margin: 0;
        padding: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
    }

    .register-container {
        background: white;
        border-radius: 8px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        padding: 40px;
        width: 100%;
        max-width: 600px;
        position: relative;
    }

    h1 {
        font-size: 24px;
        color: #333;
        margin-bottom: 20px;
        text-align: center;
    }

    .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .register-input[type="text"] {
        width: 100%;
        padding: 10px;
        font-size: 16px;
        border: 1px solid #ddd;
        border-radius: 4px;
        margin-bottom: 10px;
    }

    .register-lbl {
        display: block;
        font-weight: bold;
        margin-bottom: 5px;
    }

    .register-popup {
        background-color: white;
        padding: 20px;
        border-radius: 8px;
        width: 300px;
        text-align: center;
    }

    .register-popup input[type="text"] {
        width: 70%;
        margin-bottom: 10px;
    }

    .register-popup button {
        width: 70%;
        padding: 12px;
        background-color: #28a745;
        color: white;
        border: none;
        border-radius: 4px;
        font-size: 16px;
        cursor: pointer;
    }

    .register-popup button:hover {
        background-color: #218838;
    }

    label {
        font-size: 14px;
        color: #333;
        display: block;
        margin-bottom: 8px;
    }

    input, select {
        width: 100%;
        padding: 12px;
        font-size: 16px;
        margin-bottom: 20px;
        border: 1px solid #ccc;
        border-radius: 4px;
        background-color: #f9f9f9;
        transition: border-color 0.3s ease;
    }

    input:focus, select:focus {
        border-color: #007bff;
        outline: none;
    }

    button {
        width: 100%;
        padding: 12px;
        font-size: 16px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    button:hover {
        background-color: #0056b3;
    }

    .error-message {
        color: red;
        margin-bottom: 20px;
        font-size: 14px;
    }

    input[type="date"] {
        padding-left: 10px;
    }

    .go-back-button {
        position: absolute;
        top: 15px;
        left: 15px;
        width: 40px;
        height: 40px;
        padding: 0;
        background-color: #ffffff;
        color: #333;
        border: none;
        border-radius: 50%;
        cursor: pointer;
        font-size: 24px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: background-color 0.3s ease;
    }

    .go-back-button:hover {
        background-color: #bbb;
    }

    .form-row {
        display: flex;
        justify-content: space-between;
        gap: 100px;
    }

    .form-column {
        width: 48%;
    }
</style>
</html>